{"version":3,"sources":["./src/environments/environment.ts","./src/app/data.service.ts","./src/app/evaluationDetail.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/DismissAlert.component.ts","./src/app/dismiss-alert.component.html","./src/app/create-template.component.ts","./src/app/template-form.component.ts","./src/app/app.module.ts","./src/app/config.component.ts","./src/app/allevaluation.component.ts","./src/app/evaluation.component.ts","./src/app/tech-specific.component.ts","./src/app/alltemplate.component.ts","./src/app/create-evaluation.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigComp } from './config.component';\r\n@Injectable()\r\nexport class DataService {\r\n  applicantName;\r\n  evaluatorName;\r\n  technology;\r\n  config = new ConfigComp();\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData() {\r\n    return this.http.get(this.config.templateAPI);\r\n  }\r\n  postData(data) {\r\n    return this.http.post(this.config.templateAPI, data);\r\n  }\r\n  getEvalData() {\r\n    return this.http.get(this.config.evaluationAPI);\r\n  }\r\n  getTechData(data) {\r\n    return this.http.get(this.config.templateAPI + '/' + data);\r\n  }\r\n  postEvalData(data) {\r\n    return this.http.post(this.config.evaluationAPI, data);\r\n  }\r\n  // getData() {\r\n  //   return this.http.get('http://localhost:6060/');\r\n  // }\r\n  // postData(data) {\r\n  //   return this.http.post('http://localhost:6060/', data);\r\n  // }\r\n  // updateData(data) {\r\n  //   return this.http.post('http://localhost:6060/edit', data);\r\n  // }\r\n  // selectToUpdate(data) {\r\n  //   return this.http.post('http://localhost:6060/selectedit', data);\r\n  // }\r\n  // deleteData(data) {\r\n  //   return this.http.post('http://localhost:6060/delete', data);\r\n  // }\r\n}\r\n\r\n// import { HttpClient } from '@angular/common/http';\r\n// import { Injectable } from '@angular/core';\r\n\r\n// @Injectable()\r\n// export class DataService {\r\n//   skills = [];\r\n// }\r\n","import { Component, Input } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-eval-details',\r\n  template: `\r\n    <div class=\"container\">\r\n      <table class=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"col\" colspan=\"3\">\r\n              <label for=\"\">Applicant's Name : </label>\r\n\r\n              <input\r\n                class=\"form-control labelstyle\"\r\n                value=\"{{ resObj.APPLICANTNAME }}\"\r\n                disabled\r\n              />\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"col\" colspan=\"3\">\r\n              <label for=\"\">Evaluators's Name : </label>\r\n\r\n              <input\r\n                class=\"form-control labelstyle\"\r\n                value=\"{{ resObj.EVALUATORNAME }}\"\r\n                disabled\r\n              />\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"col\" colspan=\"3\">\r\n              <label for=\"\">Technology : </label>\r\n\r\n              <input\r\n                class=\"form-control labelstyle\"\r\n                value=\" {{ resObj.EVALNAME }}\"\r\n                disabled\r\n              />\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"col\" colspan=\"3\">\r\n              <label for=\"\">Date : </label>\r\n\r\n              <input\r\n                class=\"form-control labelstyle\"\r\n                value=\"  {{ today | date: 'dd/MMM/yyyy' }}\"\r\n                disabled\r\n              />\r\n            </th>\r\n          </tr>\r\n\r\n          <tr>\r\n            <th scope=\"col\">\r\n              <label for=\"\">Skills :</label>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <label for=\"\">Scores :</label>\r\n            </th>\r\n          </tr>\r\n          <tr *ngFor=\"let skill of uniqueskills\">\r\n            <td scope=\"col\">\r\n              <label for=\"\">{{ skill.EVALSKILL }}</label>\r\n            </td>\r\n            <td scope=\"col\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"10\"\r\n                step=\"1\"\r\n                [(ngModel)]=\"skill.EVALSCORE\"\r\n              />\r\n              {{ skill.EVALSCORE }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      table {\r\n        width: 70%;\r\n        margin: 0% auto;\r\n      }\r\n      input {\r\n        height: 55px;\r\n        width: 100%;\r\n      }\r\n      th,\r\n      td {\r\n        vertical-align: middle;\r\n      }\r\n      .labelstyle {\r\n        width: 100%;\r\n        border: 1px solid lightgrey;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class EvaluationDetailComp {\r\n  today: number = Date.now();\r\n  agree = true;\r\n  uniquenames = [];\r\n  slist;\r\n  evalarr = [];\r\n  resObj = {\r\n    APPLICANTNAME: '',\r\n    EVALUATORNAME: '',\r\n    EVALNAME: '',\r\n  };\r\n  uniqueskills = [];\r\n\r\n  constructor(private ds: DataService) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getEvalData().subscribe(\r\n      (res) => {\r\n        this.slist = res;\r\n        console.log(this.slist);\r\n        console.log(this.slist.EVALUATION);\r\n\r\n        this.resObj = {\r\n          APPLICANTNAME: this.ds.applicantName,\r\n          EVALUATORNAME: this.ds.evaluatorName,\r\n          EVALNAME: this.ds.technology,\r\n        };\r\n\r\n        this.slist.EVALUATION.forEach((element) => {\r\n          if (element.APPLICANTNAME === this.ds.applicantName) {\r\n            let obj = {\r\n              EVALSCORE: element.EVALSCORE,\r\n              EVALSKILL: element.EVALSKILL,\r\n            };\r\n            this.uniqueskills.push(obj);\r\n          }\r\n        });\r\n        console.log('uni skills : ', this.uniqueskills);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'evaluation-management';\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n\r\n    <style>\r\n      /* body {\r\n        border: 0px solid transparent;\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n      .navstyle {\r\n        padding: 10px;\r\n      }\r\n      .logo {\r\n        height: 20%;\r\n        width: 20%;\r\n        float: left;\r\n      }\r\n      ul.ulclass {\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n        flex-wrap: wrap;\r\n        list-style-type: none;\r\n        margin: 0px;\r\n        padding: 0px;\r\n        padding-right: 3%;\r\n      }\r\n      .astyle {\r\n        color: black;\r\n      }\r\n      a:link.astyle,\r\n      a:visited.astyle {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-decoration: none;\r\n        padding: 22px;\r\n        text-align: center;\r\n      }\r\n      a:hover.astyle,\r\n      a:active.astyle {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        color: #3f6fac;\r\n        background-color: #f3f3f3;\r\n        border-bottom: 2px solid #3f6fac;\r\n      }\r\n      a:link.nav-link,\r\n      a:visited.nav-link {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-decoration: none;\r\n        padding: 22px;\r\n        text-align: center;\r\n        color: black;\r\n      }\r\n      a:hover.nav-link,\r\n      a:active.nav-link {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        color: #3f6fac;\r\n        background-color: #f3f3f3;\r\n        border-bottom: 2px solid #3f6fac;\r\n      }\r\n      hr.fancy-line {\r\n        background: #3f6fac;\r\n        opacity: 0.5;\r\n        box-shadow: 0px 3px 5px #3f6fac;\r\n        border: 0px solid transparent;\r\n        height: 1px;\r\n        width: 100%;\r\n        margin: 0.8% 0%;\r\n      } */\r\n      nav {\r\n        padding: 0%;\r\n        border: 0px solid transparent;\r\n        margin-bottom: 1%;\r\n      }\r\n      a:link.main {\r\n        margin: 0%;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-decoration: none;\r\n        padding: 20px;\r\n        text-align: center;\r\n        color: black;\r\n      }\r\n      a:hover.main,\r\n      a:visited.main {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        color: #3f6fac;\r\n        background-color: #f3f3f3;\r\n        /* border-bottom: 2px solid #3f6fac; */\r\n      }\r\n      a:active.main {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        color: #3f6fac;\r\n        background-color: #94dbf7;\r\n      }\r\n      a:link.drop {\r\n        margin: 0%;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        color: black;\r\n      }\r\n      a:hover.drop,\r\n      a:visited.drop {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        color: #3f6fac;\r\n        background-color: #f3f3f3;\r\n      }\r\n      .active.main.nav-link {\r\n        background-color: #94dbf7;\r\n        padding: 20px;\r\n        margin: 0%;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body onload=\"init()\">\r\n    <!-- Just an image -->\r\n    <!-- <nav class=\"navbar navbar-light\" style=\"padding: 0%; margin-bottom: 2%;\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          <img src=\"../assets/images/header-icon.png\" alt=\"\" />\r\n        </a>\r\n\r\n        <ul class=\"nav justify-content-end\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\" [routerLink]=\"['template']\"\r\n              >Template</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">All Evaluations</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\" [routerLink]=\"['evaluation']\"\r\n              >Evaluation</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <hr class=\"fancy-line\" />\r\n    </nav> -->\r\n\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light static-top\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand navbar-left\" href=\"#\">\r\n          <img\r\n            class=\"img-responsive\"\r\n            src=\"../assets/images/header-icon.png\"\r\n            alt=\"\"\r\n          />\r\n        </a>\r\n        <button\r\n          style=\"margin-right: 2%\"\r\n          class=\"navbar-toggler navbar-right\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarResponsive\"\r\n          aria-controls=\"navbarResponsive\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          class=\"collapse navbar-collapse navbar-right\"\r\n          id=\"navbarResponsive\"\r\n        >\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown\">\r\n              <a\r\n                class=\"nav-link main dropdown-toggle active\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"#\"\r\n                >Evaluation<span class=\"caret\"></span>\r\n              </a>\r\n              <ul class=\"dropdown-menu\">\r\n                <li class=\"nav-item\">\r\n                  <a\r\n                    class=\"nav-link drop\"\r\n                    [routerLink]=\"['createevaluation']\"\r\n                    href=\"#\"\r\n                    >Create Evaluation</a\r\n                  >\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a\r\n                    class=\"nav-link drop\"\r\n                    [routerLink]=\"['allevaluation']\"\r\n                    href=\"#\"\r\n                    >All Evaluations</a\r\n                  >\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"nav-item dropdown\">\r\n              <a\r\n                class=\"nav-link main dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                href=\"#\"\r\n                >Template<span class=\"caret\"></span>\r\n              </a>\r\n              <ul class=\"dropdown-menu\">\r\n                <li class=\"nav-item\">\r\n                  <a\r\n                    class=\"nav-link drop\"\r\n                    [routerLink]=\"['createtemplate']\"\r\n                    href=\"#\"\r\n                    >Create Template</a\r\n                  >\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a\r\n                    class=\"nav-link drop\"\r\n                    [routerLink]=\"['alltemplate']\"\r\n                    href=\"#\"\r\n                    >All Templates</a\r\n                  >\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n\r\n    <!-- ================================================================================= -->\r\n\r\n    <!-- <nav class=\"navstyle\">\r\n      <header>\r\n        <a href=\"\">\r\n          <img class=\"logo\" src=\"../assets/images/header-icon.png\" alt=\"logo\" />\r\n        </a>\r\n      </header>\r\n      <ul class=\"ulclass\">\r\n        <li>\r\n          <a class=\"astyle\" href=\"#\" [routerLink]=\"['template']\">Template</a>\r\n        </li>\r\n        <li>\r\n          <a class=\"astyle\" href=\"#\" [routerLink]=\"['allevaluation']\"\r\n            >All Evaluations</a\r\n          >\r\n        </li>\r\n        <li>\r\n          <a class=\"astyle\" href=\"#\" [routerLink]=\"['evaluation']\"\r\n            >Evaluation</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <hr class=\"fancy-line\" /> -->\r\n  </body>\r\n</html>\r\n","import { Component, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dismiss-alert',\r\n  templateUrl: './dismiss-alert.component.html'\r\n})\r\nexport class DismissAlertComponent {\r\n  @ViewChild('alert', { static: true }) alert: ElementRef;\r\n\r\n  closeAlert() {\r\n    this.alert.nativeElement.classList.remove('show');\r\n  }\r\n\r\n}","<!-- <!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n  </head>\r\n  <body>\r\n    <div\r\n      #alert\r\n      class=\"alert alert-warning alert-success fade show\"\r\n      role=\"alert\"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        aria-label=\"Close\"\r\n        (click)=\"closeAlert()\"\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <strong>Congrats</strong> Data Updated.\r\n    </div>\r\n  </body>\r\n</html> -->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta\r\n      name=\"viewport\"\r\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\r\n    />\r\n    <title>Bootstrap Delete Confirmation Modal</title>\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://fonts.googleapis.com/css?family=Roboto|Varela+Round\"\r\n    />\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n    />\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n    />\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n    />\r\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\r\n    <style>\r\n      body {\r\n        font-family: \"Varela Round\", sans-serif;\r\n      }\r\n      .modal-confirm {\r\n        color: #636363;\r\n        width: 400px;\r\n      }\r\n      .modal-confirm .modal-content {\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        text-align: center;\r\n        font-size: 14px;\r\n      }\r\n      .modal-confirm .modal-header {\r\n        border-bottom: none;\r\n        position: relative;\r\n      }\r\n      .modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 26px;\r\n        margin: 30px 0 -10px;\r\n      }\r\n      .modal-confirm .close {\r\n        position: absolute;\r\n        top: -5px;\r\n        right: -2px;\r\n      }\r\n      .modal-confirm .modal-body {\r\n        color: #999;\r\n      }\r\n      .modal-confirm .modal-footer {\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        padding: 10px 15px 25px;\r\n      }\r\n      .modal-confirm .modal-footer a {\r\n        color: #999;\r\n      }\r\n      .modal-confirm .icon-box {\r\n        width: 80px;\r\n        height: 80px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        text-align: center;\r\n        border: 3px solid #f15e5e;\r\n      }\r\n      .modal-confirm .icon-box i {\r\n        color: #f15e5e;\r\n        font-size: 46px;\r\n        display: inline-block;\r\n        margin-top: 13px;\r\n      }\r\n      .modal-confirm .btn,\r\n      .modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #60c7c1;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        min-width: 120px;\r\n        border: none;\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n        margin: 0 5px;\r\n      }\r\n      .modal-confirm .btn-secondary {\r\n        background: #c1c1c1;\r\n      }\r\n      .modal-confirm .btn-secondary:hover,\r\n      .modal-confirm .btn-secondary:focus {\r\n        background: #a8a8a8;\r\n      }\r\n      .modal-confirm .btn-danger {\r\n        background: #f15e5e;\r\n      }\r\n      .modal-confirm .btn-danger:hover,\r\n      .modal-confirm .btn-danger:focus {\r\n        background: #ee3535;\r\n      }\r\n      .trigger-btn {\r\n        display: inline-block;\r\n        margin: 100px auto;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <!-- Modal HTML -->\r\n    <div id=\"myModal\" class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-confirm\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header flex-column\">\r\n            <div class=\"icon-box\">\r\n              <i class=\"material-icons\">&#xE5CD;</i>\r\n            </div>\r\n            <h4 class=\"modal-title w-100\">Are you sure?</h4>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <p>\r\n              Do you really want to delete these records? This process cannot be\r\n              undone.\r\n            </p>\r\n          </div>\r\n          <div class=\"modal-footer justify-content-center\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </body>\r\n</html>\r\n","import { Component, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'selenium-webdriver';\r\nimport { DataService } from './data.service';\r\nimport { DismissAlertComponent } from './DismissAlert.component';\r\n\r\n@Component({\r\n  selector: 'app-createtemplate-comp',\r\n  template: `\r\n    <div\r\n      id=\"myModal\"\r\n      class=\"modal fail fade\"\r\n      [ngClass]=\"{ show: showFailModal }\"\r\n    >\r\n      <div class=\"modal-dialog modal-confirm fail\">\r\n        <div class=\"modal-content fail\">\r\n          <div class=\"modal-header flex-column fail\">\r\n            <div class=\"icon-box fail\">\r\n              <i class=\"material-icons fail\">&#xE5CD;</i>\r\n            </div>\r\n            <h4 class=\"fail modal-title w-100\">Error Alert</h4>\r\n            <button\r\n              (click)=\"[(showFailModal = false)]\"\r\n              type=\"button\"\r\n              class=\"close fail\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body fail\">\r\n            <p>Please check the error. Something went wrong!</p>\r\n          </div>\r\n          <div class=\"fail modal-footer justify-content-center\">\r\n            <button\r\n              (click)=\"showFailModal = false\"\r\n              type=\"button\"\r\n              class=\"btn btn-secondary fail\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"myModal\" class=\"modal fade\" [ngClass]=\"{ show: showModal }\">\r\n      <div class=\"modal-dialog modal-confirm\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header justify-content-center\">\r\n            <div class=\"icon-box\">\r\n              <i class=\"material-icons\">&#xE876;</i>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              (click)=\"[(showModal = false), redirectFun()]\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <h4>Great!</h4>\r\n            <p>Your technology has been added successfully.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <form ngNativeValidate>\r\n        <table class=\"table\" [ngStyle]=\"{ width: '70%', margin: '0% auto' }\">\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\" [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n                <label for=\"technology\">Technology :</label>\r\n              </th>\r\n              <th scope=\"col\" colspan=\"3\">\r\n                <input\r\n                  [ngStyle]=\"{ height: '55px' }\"\r\n                  id=\"technology\"\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"tarea\"\r\n                  name=\"techarea\"\r\n                  class=\"form-control\"\r\n                  required\r\n                  placeholder=\"Enter Technology\"\r\n                />\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n                <label for=\"skillname\">Skill :</label>\r\n              </th>\r\n              <td>\r\n                <input\r\n                  [ngStyle]=\"{ height: '55px' }\"\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"skill\"\r\n                  name=\"skillname\"\r\n                  class=\"form-control\"\r\n                  id=\"skillname\"\r\n                  placeholder=\"Enter Skill\"\r\n                  #skillname\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"mb-3\">\r\n          <button\r\n            class=\"btn\"\r\n            [ngStyle]=\"{ 'margin-top': '2%' }\"\r\n            type=\"submit\"\r\n            (click)=\"submitHandler(skillname.value)\"\r\n            class=\"btn btn-primary mb-3\"\r\n          >\r\n            Add Technology\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .modal.show {\r\n        display: block;\r\n      }\r\n      .modal-confirm {\r\n        color: #434e65;\r\n        width: 525px;\r\n        border: 1px solid gray;\r\n        border-radius: 5px;\r\n      }\r\n      .modal-confirm .modal-content {\r\n        padding: 20px;\r\n        font-size: 16px;\r\n        border-radius: 5px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .modal-header {\r\n        background: #8faed6;\r\n        border-bottom: none;\r\n        position: relative;\r\n        text-align: center;\r\n        margin: -20px -20px 0;\r\n        border-radius: 5px 5px 0 0;\r\n        padding: 35px;\r\n      }\r\n      .modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 36px;\r\n        margin: 10px 0;\r\n      }\r\n      .modal-confirm .form-control,\r\n      .modal-confirm .btn {\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n      }\r\n      .modal-confirm .close {\r\n        position: absolute;\r\n        top: 15px;\r\n        right: 15px;\r\n        color: #fff;\r\n        text-shadow: none;\r\n        opacity: 0.5;\r\n      }\r\n      .modal-confirm .close:hover {\r\n        opacity: 0.8;\r\n      }\r\n      .modal-confirm .icon-box {\r\n        color: #fff;\r\n        width: 95px;\r\n        height: 95px;\r\n        display: inline-block;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        border: 5px solid #fff;\r\n        padding: 15px;\r\n        text-align: center;\r\n      }\r\n      .modal-confirm .icon-box i {\r\n        font-size: 64px;\r\n        margin: -4px 0 0 -4px;\r\n      }\r\n      .modal-confirm.modal-dialog {\r\n        margin-top: 80px;\r\n      }\r\n      .modal-confirm .btn,\r\n      .modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #eeb711 !important;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        border-radius: 30px;\r\n        margin-top: 10px;\r\n        padding: 6px 20px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .btn:hover,\r\n      .modal-confirm .btn:focus {\r\n        background: #eda645 !important;\r\n        outline: none;\r\n      }\r\n      .modal-confirm .btn span {\r\n        margin: 1px 3px 0;\r\n        float: left;\r\n      }\r\n      .modal-confirm .btn i {\r\n        margin-left: 1px;\r\n        font-size: 20px;\r\n        float: right;\r\n      }\r\n      .trigger-btn {\r\n        display: inline-block;\r\n        margin: 100px auto;\r\n      }\r\n\r\n      .fail.modal-confirm {\r\n        color: #636363;\r\n        width: 400px;\r\n      }\r\n      .fail.modal-confirm .modal-content {\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        text-align: center;\r\n        font-size: 14px;\r\n      }\r\n      .fail.modal-confirm .modal-header {\r\n        border-bottom: none;\r\n        background-color: #ff9999;\r\n        position: relative;\r\n      }\r\n      .fail.modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 26px;\r\n        margin: 30px 0 -10px;\r\n      }\r\n      .fail.modal-confirm .close {\r\n        position: absolute;\r\n        top: -5px;\r\n        right: -2px;\r\n      }\r\n      .modal-confirm .modal-body {\r\n        color: black;\r\n      }\r\n      .modal-confirm .modal-footer {\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        padding: 10px 15px 25px;\r\n      }\r\n      .fail.modal-confirm .modal-footer a {\r\n        color: #999;\r\n      }\r\n      .fail.modal-confirm .icon-box {\r\n        width: 80px;\r\n        height: 80px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        text-align: center;\r\n        border: 3px solid #f15e5e;\r\n      }\r\n      .fail.modal-confirm .icon-box i {\r\n        color: #f15e5e;\r\n        font-size: 46px;\r\n        display: inline-block;\r\n        margin: 0px;\r\n      }\r\n      .fail.modal-confirm .btn,\r\n      .fail.modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #ff9999;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        min-width: 120px;\r\n        border: none;\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n        margin: 0 5px;\r\n      }\r\n      .fail.modal-confirm .btn-secondary {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-secondary:hover,\r\n      .fail.modal-confirm .btn-secondary:focus {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger:hover,\r\n      .fail.modal-confirm .btn-danger:focus {\r\n        background: #ff9999;\r\n      }\r\n      .btn {\r\n        text-align: center;\r\n        padding: 1%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class CreateTemplateComp {\r\n  showFailModal;\r\n  showModal;\r\n  tarea = '';\r\n  techarr = [];\r\n  uniquetech = [];\r\n  editUser = false;\r\n  tech;\r\n  skill;\r\n  value;\r\n  index = 0;\r\n  id = 0;\r\n  slist;\r\n  templist;\r\n  sname = [];\r\n  tid;\r\n  tname;\r\n  updateskill;\r\n  NEW = [];\r\n  UPDATE = [];\r\n  error;\r\n\r\n  constructor(private ds: DataService, private router: Router) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getData().subscribe(\r\n      (res) => {\r\n        this.templist = res;\r\n        this.slist = res;\r\n        console.log(this.slist);\r\n        console.log(this.slist.EVALUATION_TEMP);\r\n\r\n        this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          this.techarr.push(element.TEMPTECHNAME);\r\n        });\r\n\r\n        this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n        console.log('unique arr : ', this.uniquetech);\r\n        console.log(this.tarea);\r\n        this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          if (element.TEMPTECHNAME === this.tarea) {\r\n            this.sname.push(element.TEMPSKILL);\r\n          }\r\n        });\r\n        console.log(this.sname);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  redirectFun() {\r\n    this.router.navigate(['alltemplate']);\r\n  }\r\n\r\n  addSkillHandler(skill) {\r\n    let resobj = {\r\n      TEMPSKILL: skill,\r\n      TEMPTECHNAME: this.tarea,\r\n    };\r\n    this.sname.push(skill);\r\n    console.log(skill);\r\n    this.NEW.push(resobj);\r\n    console.log(this.NEW);\r\n  }\r\n\r\n  submitHandler(skill) {\r\n    if (skill && this.tarea) {\r\n      console.log('tech : ', this.tarea);\r\n      let resobj = {\r\n        TEMPSKILL: skill,\r\n        TEMPTECHNAME: this.tarea,\r\n      };\r\n      this.sname.push(skill);\r\n      console.log(skill);\r\n      this.NEW.push(resobj);\r\n      console.log(this.NEW);\r\n\r\n      let jsonObj = {\r\n        NEW: this.NEW,\r\n        UPDATE: [],\r\n        DELETE: [],\r\n      };\r\n      let obj = {\r\n        EVALUATION_TEMP: jsonObj,\r\n      };\r\n      console.log(jsonObj);\r\n\r\n      this.ds.postData(obj).subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n          this.slist = res;\r\n          this.error = false;\r\n          this.showModal = true;\r\n          document.getElementById('technology').nodeValue = '';\r\n          document.getElementById('skillname').nodeValue = '';\r\n        },\r\n        (err) => {\r\n          this.error = true;\r\n          this.showFailModal = 'true';\r\n        }\r\n      );\r\n    } else {\r\n    }\r\n  }\r\n\r\n  // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n  // import { Component, Output } from '@angular/core';\r\n  // import { NgForm } from '@angular/forms';\r\n  // import { error } from 'selenium-webdriver';\r\n  // import { DataService } from './data.service';\r\n  // import { DismissAlertComponent } from './DismissAlert.component';\r\n\r\n  // @Component({\r\n  //   selector: 'app-createtemplate-comp',\r\n  //   template: `\r\n  //     <div class=\"container\">\r\n  //       <table class=\"table\">\r\n  //         <thead>\r\n  //           <tr>\r\n  //             <th scope=\"col\">Technology</th>\r\n  //             <th scope=\"col\" colspan=\"3\">\r\n  //               <select\r\n  //                 #techarea\r\n  //                 required\r\n  //                 (change)=\"dropdownHandler(techarea.value)\"\r\n  //               >\r\n  //                 <option *ngFor=\"let tech of uniquetech\" [value]=\"tech\">\r\n  //                   {{ tech }}\r\n  //                 </option>\r\n  //               </select>\r\n  //             </th>\r\n  //           </tr>\r\n  //         </thead>\r\n  //         <tbody>\r\n  //           <tr *ngIf=\"!editUser\">\r\n  //             <td colspan=\"3\">\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 [(ngModel)]=\"skill\"\r\n  //                 class=\"form-control\"\r\n  //                 id=\"skillname\"\r\n  //                 placeholder=\"Enter Skill\"\r\n  //                 #skillname\r\n  //               />\r\n  //             </td>\r\n  //             <td>\r\n  //               <button\r\n  //                 type=\"submit\"\r\n  //                 (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n  //                 class=\"btn btn-info mb-3\"\r\n  //               >\r\n  //                 Add Skill\r\n  //               </button>\r\n  //             </td>\r\n  //           </tr>\r\n\r\n  //           <tr *ngIf=\"editUser\">\r\n  //             <td colspan=\"3\">\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 [(ngModel)]=\"skill\"\r\n  //                 class=\"form-control\"\r\n  //                 id=\"username\"\r\n  //                 placeholder=\"Enter Skill \"\r\n  //               />\r\n  //             </td>\r\n  //             <td>\r\n  //               <button\r\n  //                 type=\"submit\"\r\n  //                 (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n  //                 class=\"btn btn-info mb-3\"\r\n  //               >\r\n  //                 Update Skill\r\n  //               </button>\r\n  //             </td>\r\n  //           </tr>\r\n\r\n  //           <tr *ngFor=\"let skills of sname; index as idx\">\r\n  //             <th scope=\"row\">Skill {{ idx + 1 }}</th>\r\n  //             <td>{{ skills }}</td>\r\n  //             <td>\r\n  //               <button\r\n  //                 class=\"bi bi-pencil-square btn btn-outline-info\"\r\n  //                 (click)=\"[editHandler(skills), (editUser = !editUser)]\"\r\n  //               >\r\n  //                 Edit\r\n  //               </button>\r\n  //             </td>\r\n  //             <td>\r\n  //               <button\r\n  //                 class=\"bi bi bi-trash btn btn-outline-danger\"\r\n  //                 (click)=\"deleteHandler(skills)\"\r\n  //               >\r\n  //                 Delete\r\n  //               </button>\r\n  //             </td>\r\n  //           </tr>\r\n  //         </tbody>\r\n  //       </table>\r\n\r\n  //       <!-- ng-template [ngIf]=\"!editUser\">\r\n  //         <h5>Add Skills</h5>\r\n  //         <div class=\"mb-3\">\r\n  //           <label for=\"skillname\" class=\"form-label\"></label>\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             [(ngModel)]=\"skill\"\r\n  //             class=\"form-control\"\r\n  //             id=\"skillname\"\r\n  //             placeholder=\"Enter Skill\"\r\n  //             #skillname\r\n  //           />\r\n  //         </div>\r\n\r\n  //         <div class=\"mb-3\">\r\n  //           <button\r\n  //             type=\"submit\"\r\n  //             (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n  //             class=\"btn btn-info mb-3\"\r\n  //           >\r\n  //             Add Skill\r\n  //           </button>\r\n  //         </div>\r\n  //       <!/ng-template -->\r\n\r\n  //       <!-- ng-template [ngIf]=\"editUser\">\r\n  //         <h5>Edit Skills</h5>\r\n  //         <div class=\"mb-3\">\r\n  //           <label for=\"username\" class=\"form-label\"></label>\r\n  //           <input\r\n  //             type=\"text\"\r\n  //             [(ngModel)]=\"skill\"\r\n  //             class=\"form-control\"\r\n  //             id=\"username\"\r\n  //             placeholder=\"Enter Skill \"\r\n  //           />\r\n  //         </div>\r\n\r\n  //         <div class=\"mb-3\">\r\n  //           <button\r\n  //             type=\"submit\"\r\n  //             (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n  //             class=\"btn btn-info mb-3\"\r\n  //           >\r\n  //             Update Skill\r\n  //           </button>\r\n  //         </div>\r\n  //       <!/ng-template -->\r\n\r\n  //       <div class=\"mb-3\">\r\n  //         <center>\r\n  //           <button\r\n  //             type=\"submit\"\r\n  //             (click)=\"submitHandler()\"\r\n  //             class=\"btn btn-primary mb-3\"\r\n  //           >\r\n  //             Submit\r\n  //           </button>\r\n  //         </center>\r\n  //       </div>\r\n  //     </div>\r\n  //   `,\r\n  //   styles: [\r\n  //     `\r\n  //       tr td span {\r\n  //         color: crimson;\r\n  //       }\r\n  //       tr td input.ng-invalid.ng-touched {\r\n  //         border: 2px solid crimson;\r\n  //       }\r\n  //       tr td input.ng-valid.ng-touched {\r\n  //         border: 2px solid darkseagreen;\r\n  //       }\r\n  //     `,\r\n  //   ],\r\n  // })\r\n  // export class CreateTemplateComp {\r\n  //   tarea = '';\r\n  //   techarr = [];\r\n  //   uniquetech = [];\r\n  //   editUser = false;\r\n  //   tech;\r\n  //   skill;\r\n  //   value;\r\n  //   index = 0;\r\n  //   id = 0;\r\n  //   slist;\r\n  //   templist;\r\n  //   sname = [];\r\n  //   tid;\r\n  //   tname;\r\n  //   updateskill;\r\n  //   NEW = [];\r\n  //   UPDATE = [];\r\n  //   error;\r\n\r\n  //   constructor(private ds: DataService) {\r\n  //     this.callDataServer();\r\n  //   }\r\n  //   callDataServer() {\r\n  //     this.ds.getData().subscribe(\r\n  //       (res) => {\r\n  //         this.templist = res;\r\n  //         this.slist = res;\r\n  //         console.log(this.slist);\r\n  //         console.log(this.slist.EVALUATION_TEMP);\r\n\r\n  //         this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //           this.techarr.push(element.TEMPTECHNAME);\r\n  //         });\r\n\r\n  //         this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n  //         console.log('unique arr : ', this.uniquetech);\r\n  //         console.log(this.tarea);\r\n  //         this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //           if (element.TEMPTECHNAME === this.tarea) {\r\n  //             this.sname.push(element.TEMPSKILL);\r\n  //           }\r\n  //         });\r\n  //         console.log(this.sname);\r\n  //       },\r\n  //       (err) => {\r\n  //         console.log('Error : ', err);\r\n  //       }\r\n  //     );\r\n  //   }\r\n\r\n  //   dropdownHandler(tech) {\r\n  //     console.log('entered');\r\n  //     console.log(tech);\r\n  //     this.tarea = tech;\r\n  //     this.sname = [];\r\n  //     this.callDataServer();\r\n  //   }\r\n\r\n  //   addSkillHandler(skill) {\r\n  //     let resobj = {\r\n  //       TEMPSKILL: skill,\r\n  //       TEMPTECHNAME: this.tarea,\r\n  //     };\r\n  //     this.sname.push(skill);\r\n  //     console.log(skill);\r\n  //     this.NEW.push(resobj);\r\n  //     console.log(this.NEW);\r\n  //   }\r\n\r\n  //   editHandler(skill) {\r\n  //     let resObj;\r\n  //     this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //       if (element.TEMPSKILL === skill) {\r\n  //         this.updateskill = skill;\r\n  //         resObj = {\r\n  //           TEMPID: element.TEMPID,\r\n  //           TEMPSKILL: element.TEMPSKILL,\r\n  //         };\r\n  //         return false;\r\n  //       }\r\n  //     });\r\n  //     console.log(resObj);\r\n  //     this.UPDATE.push(resObj);\r\n  //     console.log(this.UPDATE);\r\n  //     this.index = this.sname.indexOf(skill);\r\n  //     // console.log(this.index);\r\n  //   }\r\n\r\n  //   updateHandler(skill) {\r\n  //     this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //       if (element.TEMPSKILL === this.updateskill) {\r\n  //         element.TEMPSKILL = skill;\r\n  //         return false;\r\n  //       }\r\n  //     });\r\n  //     this.sname[this.index] = skill;\r\n  //     console.log(this.sname);\r\n  //     console.log(this.slist);\r\n  //     this.UPDATE.forEach((element) => {\r\n  //       if (element.TEMPSKILL === this.updateskill) {\r\n  //         element.TEMPSKILL = skill;\r\n  //         return false;\r\n  //       }\r\n  //     });\r\n  //   }\r\n\r\n  //   deleteHandler(skills) {}\r\n\r\n  //   submitHandler() {\r\n  //     let jsonObj = {\r\n  //       NEW: this.NEW,\r\n  //       UPDATE: this.UPDATE,\r\n  //       DELETE: [],\r\n  //     };\r\n  //     let obj = {\r\n  //       EVALUATION_TEMP: jsonObj,\r\n  //     };\r\n  //     console.log(jsonObj);\r\n\r\n  //     this.ds.postData(obj).subscribe(\r\n  //       (res) => {\r\n  //         console.log(res);\r\n  //         this.slist = res;\r\n  //         this.error = false;\r\n  //       },\r\n  //       (err) => {\r\n  //         this.error = true;\r\n  //       }\r\n  //     );\r\n  //   }\r\n\r\n  //***************************************************************** */\r\n\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       this.tarea = this.slist.techarea;\r\n  //       console.log(this.tarea);\r\n  //       this.slist.skills.forEach((element) => {\r\n  //         let index = element;\r\n  //         this.sname.push(index.name);\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n  // addSkillHandler(skill) {\r\n  //   let resobj = {\r\n  //     skills: skill,\r\n  //   };\r\n  //   this.sname.push(skill);\r\n  //   this.ds.postData(resobj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n\r\n  //   // if (this.slist.find((sk) => this.slist === skill)) {\r\n  //   //   console.log('user already exists');\r\n  //   // } else {\r\n  //   //   console.log(skill);\r\n  //   //   this.slist.push(skill);\r\n  //   // }\r\n  // }\r\n\r\n  // deleteHandler(skills) {\r\n  //   console.log(skills);\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.deleteData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // editHandler(skills) {\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.selectToUpdate(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  // }\r\n  // updateUser(skill) {\r\n  //   console.log(skill);\r\n  //   let resObj = {\r\n  //     id: this.updateskill.id,\r\n  //     skills: skill,\r\n  //   };\r\n  //   console.log(resObj);\r\n  //   this.ds.updateData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // submitHandler() {}\r\n}\r\n","import { Component, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DataService } from './data.service';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-template-form',\r\n  template: `\r\n    <div class=\"conatiner contain\">\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" [routerLink]=\"['createtemplate']\">Create Template</button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" [routerLink]=\"['alltemplate']\">All Templates</button>\r\n      </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n    \r\n  `,\r\n  styles: [\r\n    `\r\n      tr td span {\r\n        color: crimson;\r\n      }\r\n      tr td input.ng-invalid.ng-touched {\r\n        border: 2px solid crimson;\r\n      }\r\n      tr td input.ng-valid.ng-touched {\r\n        border: 2px solid darkseagreen;\r\n      }\r\n      .contain {\r\n        padding: 1% 10%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class TemplateForm {\r\n  // tarea = '';\r\n  // techarr = [];\r\n  // uniquetech = [];\r\n  // editUser = false;\r\n  // tech;\r\n  // skill;\r\n  // value;\r\n  // index = 0;\r\n  // id = 0;\r\n  // slist;\r\n  // templist;\r\n  // sname = [];\r\n  // tid;\r\n  // tname;\r\n  // updateskill;\r\n  // NEW = [];\r\n  // UPDATE = [];\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.templist = res;\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       console.log(this.slist.EVALUATION_TEMP);\r\n  //       this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //         this.techarr.push(element.TEMPTECHNAME);\r\n  //       });\r\n  //       this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n  //       console.log('unique arr : ', this.uniquetech);\r\n  //       console.log(this.tarea);\r\n  //       this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //         if (element.TEMPTECHNAME === this.tarea) {\r\n  //           this.sname.push(element.TEMPSKILL);\r\n  //         }\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n  // dropdownHandler(tech) {\r\n  //   console.log('entered');\r\n  //   console.log(tech);\r\n  //   this.tarea = tech;\r\n  //   this.sname = [];\r\n  //   this.callDataServer();\r\n  // }\r\n  // addSkillHandler(skill) {\r\n  //   let resobj = {\r\n  //     TEMPSKILL: skill,\r\n  //     TEMPTECHNAME: this.tarea,\r\n  //   };\r\n  //   this.sname.push(skill);\r\n  //   console.log(skill);\r\n  //   this.NEW.push(resobj);\r\n  //   console.log(this.NEW);\r\n  // }\r\n  // editHandler(skill) {\r\n  //   let resObj;\r\n  //   this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //     if (element.TEMPSKILL === skill) {\r\n  //       this.updateskill = skill;\r\n  //       resObj = {\r\n  //         TEMPID: element.TEMPID,\r\n  //         TEMPSKILL: element.TEMPSKILL,\r\n  //       };\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  //   console.log(resObj);\r\n  //   this.UPDATE.push(resObj);\r\n  //   console.log(this.UPDATE);\r\n  //   this.index = this.sname.indexOf(skill);\r\n  //   // console.log(this.index);\r\n  // }\r\n  // updateHandler(skill) {\r\n  //   this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //     if (element.TEMPSKILL === this.updateskill) {\r\n  //       element.TEMPSKILL = skill;\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  //   this.sname[this.index] = skill;\r\n  //   console.log(this.sname);\r\n  //   console.log(this.slist);\r\n  //   this.UPDATE.forEach((element) => {\r\n  //     if (element.TEMPSKILL === this.updateskill) {\r\n  //       element.TEMPSKILL = skill;\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  // }\r\n  // submitHandler() {\r\n  //   let jsonObj = {\r\n  //     NEW: this.NEW,\r\n  //     UPDATE: this.UPDATE,\r\n  //     DELETE: [],\r\n  //   };\r\n  //   let obj = {\r\n  //     EVALUATION_TEMP: jsonObj,\r\n  //   };\r\n  //   console.log(jsonObj);\r\n  //   this.ds.postData(obj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n  // }\r\n  //***************************************************************** */\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       this.tarea = this.slist.techarea;\r\n  //       console.log(this.tarea);\r\n  //       this.slist.skills.forEach((element) => {\r\n  //         let index = element;\r\n  //         this.sname.push(index.name);\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n  // addSkillHandler(skill) {\r\n  //   let resobj = {\r\n  //     skills: skill,\r\n  //   };\r\n  //   this.sname.push(skill);\r\n  //   this.ds.postData(resobj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n  //   // if (this.slist.find((sk) => this.slist === skill)) {\r\n  //   //   console.log('user already exists');\r\n  //   // } else {\r\n  //   //   console.log(skill);\r\n  //   //   this.slist.push(skill);\r\n  //   // }\r\n  // }\r\n  // deleteHandler(skills) {\r\n  //   console.log(skills);\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.deleteData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // editHandler(skills) {\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.selectToUpdate(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  // }\r\n  // updateUser(skill) {\r\n  //   console.log(skill);\r\n  //   let resObj = {\r\n  //     id: this.updateskill.id,\r\n  //     skills: skill,\r\n  //   };\r\n  //   console.log(resObj);\r\n  //   this.ds.updateData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // submitHandler() {}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TemplateForm } from './template-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataService } from './data.service';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { EvaluationComp } from './evaluation.component';\r\nimport { AllEvaluationComp } from './allevaluation.component';\r\nimport { AllTemplateComp } from './alltemplate.component';\r\nimport { CreateEvaluationComp } from './create-evaluation.component';\r\nimport { DismissAlertComponent } from './DismissAlert.component';\r\nimport { CreateTemplateComp } from './create-template.component';\r\nimport { TechnologySpecificComp } from './tech-specific.component';\r\nimport { ConfigComp } from './config.component';\r\nimport { EvaluationDetailComp } from './evaluationDetail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TemplateForm,\r\n    EvaluationComp,\r\n    AllEvaluationComp,\r\n    AllTemplateComp,\r\n    CreateEvaluationComp,\r\n    DismissAlertComponent,\r\n    CreateTemplateComp,\r\n    TechnologySpecificComp,\r\n    ConfigComp,\r\n    EvaluationDetailComp\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\r\n  providers: [DataService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  template: ``,\r\n})\r\nexport class ConfigComp {\r\n  evaluationAPI =\r\n    'https://opportunity-tracking-dev.mybluemix.net/api/evaluation';\r\n  templateAPI = 'https://opportunity-tracking-dev.mybluemix.net/api/template';\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { element } from 'protractor';\r\nimport { DataService } from './data.service';\r\nimport { EvaluationDetailComp } from './evaluationDetail.component';\r\n\r\n@Component({\r\n  selector: 'app-allEvaluation-form',\r\n  template: `\r\n    <ng-template [ngIf]=\"show == false\">\r\n      <div>No Data to display</div>\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"show == true\">\r\n      <div class=\"container\">\r\n        <div class=\"table-responsive\">\r\n          <table\r\n            class=\"table table-light table-hover table-striped\"\r\n            border=\"1px\"\r\n            [ngStyle]=\"{ width: '70%', margin: '0% auto' }\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Applicant's Name</th>\r\n                <th>Evaluator's Name</th>\r\n                <th>Technology</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let evalitems of evalarr\">\r\n                <td scope=\"col\">\r\n                  <a\r\n                    (click)=\"\r\n                      clickHandler(\r\n                        evalitems.APPLICANTNAME,\r\n                        evalitems.EVALUATORNAME,\r\n                        evalitems.EVALNAME\r\n                      )\r\n                    \"\r\n                    class=\"nav-link\"\r\n                    >{{ evalitems.APPLICANTNAME | titlecase }}</a\r\n                  >\r\n                </td>\r\n                <td scope=\"col\" [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n                  {{ evalitems.EVALUATORNAME | titlecase }}\r\n                </td>\r\n                <td scope=\"col\" [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n                  {{ evalitems.EVALNAME }}\r\n                </td>\r\n              </tr>\r\n              <!--tr>\r\n            <td scope=\"col\">\r\n              <b>Date :</b> {{ evalitems.CREATEDATE | date: 'dd/MMM/yyyy' }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td scope=\"col\">\r\n              <b>Skills : </b>\r\n              <label>{{ evalitems.EVALSKILL }}</label>\r\n            </td>\r\n            <td scope=\"col\">\r\n              <b>Scores : \r\n              &nbsp;\r\n              </b>\r\n              <progress\r\n                [value]=\"evalitems.EVALSCORE\"\r\n                min=\"0\"\r\n                max=\"10\"\r\n                step=\"1\"\r\n              ></progress>\r\n            </td>\r\n          <!/tr -->\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <!--div class=\"mb-3\">\r\n          <center>\r\n            <button type=\"submit\" class=\"btn btn-primary mb-3\">Submit</button>\r\n          </center>\r\n        <!/div-->\r\n      </div>\r\n\r\n      <!-- ng-template [ngIf]=\"agree == false\">\r\n      <div class=\"container\">\r\n        <table class=\"table\" [ngStyle]=\"{ width: '70%', margin: '0% auto' }\">\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\"><label for=\"\">Applicant's Name : </label></th>\r\n              <td>\r\n                {{ resObj.APPLICANTNAME }}\r\n              </td>\r\n\r\n              <th scope=\"col\">\r\n                <label for=\"\">Evaluators's Name : </label>\r\n              </th>\r\n              <td>\r\n                {{ resObj.EVALUATORNAME }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\"><label for=\"\"> Technology : </label></th>\r\n              <td>\r\n                {{ resObj.EVALNAME }}\r\n              </td>\r\n\r\n              <th scope=\"col\">\r\n                <label for=\"\">Date : </label>\r\n              </th>\r\n              <td>\r\n                {{ today | date: 'dd/MMM/yyyy' }}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"col\" colspan=\"2\">Skills :</th>\r\n              <th scope=\"col\" colspan=\"2\">Scores :</th>\r\n            </tr>\r\n            <tr *ngFor=\"let skill of uniqueskills\">\r\n              <td\r\n                scope=\"col\"\r\n                colspan=\"2\"\r\n                [ngStyle]=\"{ 'vertical-align': 'middle' }\"\r\n              >\r\n                <label for=\"\">{{ skill.EVALSKILL }}</label>\r\n              </td>\r\n              <td\r\n                scope=\"col\"\r\n                colspan=\"2\"\r\n                [ngStyle]=\"{ 'vertical-align': 'middle' }\"\r\n              >\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"10\"\r\n                  step=\"1\"\r\n                  [(ngModel)]=\"skill.EVALSCORE\"\r\n                />\r\n                {{ skill.EVALSCORE }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    <!/ng-template -->\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class AllEvaluationComp {\r\n  today: number = Date.now();\r\n  show;\r\n  agree = true;\r\n  uniquenames = [];\r\n  slist;\r\n  evalarr = [];\r\n  resObj = {\r\n    APPLICANTNAME: '',\r\n    EVALUATORNAME: '',\r\n    EVALNAME: '',\r\n  };\r\n  uniqueskills = [];\r\n  name;\r\n  eval;\r\n  tech;\r\n  evalcomp;\r\n\r\n  constructor(private ds: DataService, private router: Router) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getEvalData().subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.slist = res;\r\n          console.log(this.slist);\r\n          console.log(this.slist.EVALUATION);\r\n\r\n          let Unique = (arr) => {\r\n            //Store the unique\r\n            let uniques = [];\r\n\r\n            //Track the items added to the uniques\r\n            let itemsFound = {};\r\n            for (let val of arr) {\r\n              //If item is already added then move to the next item\r\n              if (itemsFound[val.APPLICANTNAME]) {\r\n                continue;\r\n              }\r\n\r\n              //Else push it to the unique list\r\n              uniques.push(val);\r\n\r\n              //Mark it as added\r\n              itemsFound[val.APPLICANTNAME] = true;\r\n            }\r\n\r\n            //Return the uniques\r\n            return uniques;\r\n          };\r\n\r\n          this.evalarr = Unique(this.slist.EVALUATION);\r\n          console.log(this.evalarr);\r\n          this.show = true;\r\n        } else {\r\n          this.show = false;\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n  clickHandler(name, evaluator, tech) {\r\n    this.ds.applicantName = name;\r\n    this.ds.evaluatorName = evaluator;\r\n    this.ds.technology = tech;\r\n\r\n    this.router.navigate(['evaluationDetails']);\r\n\r\n    // console.log('name : ', name);\r\n    // this.agree = false;\r\n    // this.resObj = {\r\n    //   APPLICANTNAME: name,\r\n    //   EVALUATORNAME: evaluator,\r\n    //   EVALNAME: tech,\r\n    // };\r\n\r\n    // this.slist.EVALUATION.forEach((element) => {\r\n    //   if (element.APPLICANTNAME === name) {\r\n    //     let obj = {\r\n    //       EVALSCORE: element.EVALSCORE,\r\n    //       EVALSKILL: element.EVALSKILL,\r\n    //     };\r\n    //     this.uniqueskills.push(obj);\r\n    //   }\r\n    // });\r\n    // console.log('uni skills : ', this.uniqueskills);\r\n  }\r\n}\r\n","// import { Component } from '@angular/core';\r\n// import { NgForm } from '@angular/forms';\r\n// import { DataService } from './data.service';\r\n\r\nimport { Component } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-form',\r\n  template: `\r\n    <!-- div class=\"conatiner contain\">\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-secondary\"\r\n          [routerLink]=\"['createevaluation']\"\r\n        >\r\n          Create Evaluation\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-secondary\"\r\n          [routerLink]=\"['allevaluation']\"\r\n        >\r\n          All Evaluations\r\n        </button>\r\n      </div>\r\n    <!/div -->\r\n    <!-- router-outlet><!/router-outlet -->\r\n    <!-- div class=\"container\">\r\n      <table class=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"col\">\r\n              Applicant's Name :\r\n              <input type=\"text\" placeholder=\" XYZ\" />\r\n            </th>\r\n            <th scope=\"col\">\r\n              Evaluators's Name :\r\n              <input type=\"text\" placeholder=\" ABC\" />\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"col\">\r\n              Technology :\r\n              <select\r\n                #techarea\r\n                required\r\n                (change)=\"dropdownHandler(techarea.value)\"\r\n              >\r\n                <option *ngFor=\"let tech of uniquetech\" [value]=\"tech\">\r\n                  {{ tech }}\r\n                </option>\r\n              </select>\r\n            </th>\r\n\r\n            <td scope=\"col\"><b>Date :</b> {{ today | date: 'dd/MMM/yyyy' }}</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"col\">Skills</th>\r\n            <th scope=\"col\">Scores</th>\r\n          </tr>\r\n          <tr *ngFor=\"let skill of sname\">\r\n            <td scope=\"col\">{{ skill }}</td>\r\n            <th scope=\"col\">\r\n              <input type=\"range\" min=\"0\" max=\"10\" step=\"1\" />\r\n            </th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"mb-3\">\r\n        <center>\r\n          <button\r\n            type=\"submit\"\r\n            [routerLink]=\"['evaluation']\"\r\n            class=\"btn btn-primary mb-3\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </center>\r\n      </div>\r\n    <!/div -->\r\n  `,\r\n  styles: [\r\n    `\r\n      .contain {\r\n        padding: 1% 10%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class EvaluationComp {\r\n  today: number = Date.now();\r\n\r\n  tarea = '';\r\n  techarr = [];\r\n  uniquetech = [];\r\n  editUser = false;\r\n  tech;\r\n  skill;\r\n  value;\r\n  index = 0;\r\n  id = 0;\r\n  slist;\r\n  templist;\r\n  sname = [];\r\n  tid;\r\n  tname;\r\n  updateskill;\r\n  NEW = [];\r\n  UPDATE = [];\r\n\r\n  constructor(private ds: DataService) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getData().subscribe(\r\n      (res) => {\r\n        this.templist = res;\r\n        this.slist = res;\r\n        console.log(this.slist);\r\n        console.log(this.slist.EVALUATION_TEMP);\r\n\r\n        this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          this.techarr.push(element.TEMPTECHNAME);\r\n        });\r\n\r\n        this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n        console.log('unique arr : ', this.uniquetech);\r\n        console.log(this.tarea);\r\n        this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          if (element.TEMPTECHNAME === this.tarea) {\r\n            this.sname.push(element.TEMPSKILL);\r\n          }\r\n        });\r\n        console.log(this.sname);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  dropdownHandler(tech) {\r\n    console.log('entered');\r\n    console.log(tech);\r\n    this.tarea = tech;\r\n    this.sname = [];\r\n    this.callDataServer();\r\n  }\r\n\r\n  // ====================================================================================\r\n\r\n  // tarea = '';\r\n  // editUser = false;\r\n  // skill;\r\n  // value;\r\n  // index;\r\n  // id = 0;\r\n  // slist;\r\n  // sname = [];\r\n  // tid;\r\n  // tname;\r\n  // updateskill;\r\n  // today: number = Date.now();\r\n\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       this.tarea = this.slist.techarea;\r\n  //       console.log(this.tarea);\r\n  //       this.slist.skills.forEach((element) => {\r\n  //         let index = element;\r\n  //         this.sname.push(index.name);\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { DataService } from './data.service';\r\n\r\n@Component({\r\n  selector: 'app-technology-form',\r\n  template: `\r\n    <div\r\n      id=\"myModal\"\r\n      class=\"modal fail fade\"\r\n      [ngClass]=\"{ show: showFailModal }\"\r\n    >\r\n      <div class=\"modal-dialog modal-confirm fail\">\r\n        <div class=\"modal-content fail\">\r\n          <div class=\"modal-header flex-column fail\">\r\n            <div class=\"icon-box fail\">\r\n              <i class=\"material-icons fail\">&#xE5CD;</i>\r\n            </div>\r\n            <h4 class=\"fail modal-title w-100\">Error Alert</h4>\r\n            <button\r\n              (click)=\"[(showFailModal = false)]\"\r\n              type=\"button\"\r\n              class=\"close fail\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body fail\">\r\n            <p>Please check the error. Something went wrong!</p>\r\n          </div>\r\n          <div class=\"fail modal-footer justify-content-center\">\r\n            <button\r\n              (click)=\"showFailModal = false\"\r\n              type=\"button\"\r\n              class=\"btn btn-secondary fail\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"myModal\" class=\"modal fade\" [ngClass]=\"{ show: showModal }\">\r\n      <div class=\"modal-dialog modal-confirm\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header justify-content-center\">\r\n            <div class=\"icon-box\">\r\n              <i class=\"material-icons\">&#xE876;</i>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              (click)=\"[(showModal = false), redirectFun()]\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <h4>Great!</h4>\r\n            <p>Your evaluation has been added successfully.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <table\r\n        class=\"table\"\r\n        [ngStyle]=\"{ width: '70%', margin: '0% auto', 'text-align': 'center' }\"\r\n      >\r\n        <tbody>\r\n          <tr *ngIf=\"!editUser\">\r\n            <td scope=\"col\" colspan=\"3\">\r\n              <input\r\n                type=\"text\"\r\n                [(ngModel)]=\"skill\"\r\n                class=\"form-control\"\r\n                id=\"skillname\"\r\n                placeholder=\"Enter Skill\"\r\n                #skillname\r\n              />\r\n            </td>\r\n            <td [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n              <button\r\n                type=\"submit\"\r\n                (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n                class=\"btn btn-info mb-3 btnstyle\"\r\n              >\r\n                Add Skill\r\n              </button>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr *ngIf=\"editUser\">\r\n            <td colspan=\"3\">\r\n              <input\r\n                type=\"text\"\r\n                [(ngModel)]=\"skill\"\r\n                class=\"form-control\"\r\n                id=\"editskill\"\r\n                placeholder=\"Enter Skill \"\r\n              />\r\n            </td>\r\n            <td [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n              <button\r\n                type=\"submit\"\r\n                (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n                class=\"btn btn-info mb-3 btnstyle\"\r\n              >\r\n                Update Skill\r\n              </button>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr *ngFor=\"let skills of sname; index as idx\">\r\n            <th scope=\"row\" [ngStyle]=\"{ 'vertical-align': 'middle' }\">\r\n              Skill {{ idx + 1 }}\r\n            </th>\r\n            <td [ngStyle]=\"{ 'vertical-align': 'middle' }\">{{ skills }}</td>\r\n            <td>\r\n              <button\r\n                class=\"bi bi-pencil-square btn btn-outline-info\"\r\n                (click)=\"[editHandler(skills), (editUser = !editUser)]\"\r\n              >\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                class=\"bi bi bi-trash btn btn-outline-danger\"\r\n                (click)=\"deleteHandler(skills)\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- ng-template [ngIf]=\"!editUser\">\r\n    <h5>Add Skills</h5>\r\n    <div class=\"mb-3\">\r\n      <label for=\"skillname\" class=\"form-label\"></label>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"skill\"\r\n        class=\"form-control\"\r\n        id=\"skillname\"\r\n        placeholder=\"Enter Skill\"\r\n        #skillname\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <button\r\n        type=\"submit\"\r\n        (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n        class=\"btn btn-info mb-3\"\r\n      >\r\n        Add Skill\r\n      </button>\r\n    </div>\r\n  <!/ng-template -->\r\n\r\n      <!-- ng-template [ngIf]=\"editUser\">\r\n    <h5>Edit Skills</h5>\r\n    <div class=\"mb-3\">\r\n      <label for=\"username\" class=\"form-label\"></label>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"skill\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        placeholder=\"Enter Skill \"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <button\r\n        type=\"submit\"\r\n        (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n        class=\"btn btn-info mb-3\"\r\n      >\r\n        Update Skill\r\n      </button>\r\n    </div>\r\n  <!/ng-template -->\r\n\r\n      <div class=\"mb-3\">\r\n        <button\r\n          type=\"submit\"\r\n          (click)=\"submitHandler()\"\r\n          class=\"btn btn-primary mb-3 submit\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .submit {\r\n        margin: '2% auto';\r\n      }\r\n\r\n      .modal.show {\r\n        display: block;\r\n      }\r\n      .modal-confirm {\r\n        color: #434e65;\r\n        width: 525px;\r\n        border: 1px solid gray;\r\n        border-radius: 5px;\r\n      }\r\n      .modal-confirm .modal-content {\r\n        padding: 20px;\r\n        font-size: 16px;\r\n        border-radius: 5px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .modal-header {\r\n        background: #8faed6;\r\n        border-bottom: none;\r\n        position: relative;\r\n        text-align: center;\r\n        margin: -20px -20px 0;\r\n        border-radius: 5px 5px 0 0;\r\n        padding: 35px;\r\n      }\r\n      .modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 36px;\r\n        margin: 10px 0;\r\n      }\r\n      .modal-confirm .form-control,\r\n      .modal-confirm .btn {\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n      }\r\n      .modal-confirm .close {\r\n        position: absolute;\r\n        top: 15px;\r\n        right: 15px;\r\n        color: #fff;\r\n        text-shadow: none;\r\n        opacity: 0.5;\r\n      }\r\n      .modal-confirm .close:hover {\r\n        opacity: 0.8;\r\n      }\r\n      .modal-confirm .icon-box {\r\n        color: #fff;\r\n        width: 95px;\r\n        height: 95px;\r\n        display: inline-block;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        border: 5px solid #fff;\r\n        padding: 15px;\r\n        text-align: center;\r\n      }\r\n      .modal-confirm .icon-box i {\r\n        font-size: 64px;\r\n        margin: -4px 0 0 -4px;\r\n      }\r\n      .modal-confirm.modal-dialog {\r\n        margin-top: 80px;\r\n      }\r\n      .modal-confirm .btn,\r\n      .modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #eeb711 !important;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        border-radius: 30px;\r\n        margin-top: 10px;\r\n        padding: 6px 20px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .btn:hover,\r\n      .modal-confirm .btn:focus {\r\n        background: #eda645 !important;\r\n        outline: none;\r\n      }\r\n      .modal-confirm .btn span {\r\n        margin: 1px 3px 0;\r\n        float: left;\r\n      }\r\n      .modal-confirm .btn i {\r\n        margin-left: 1px;\r\n        font-size: 20px;\r\n        float: right;\r\n      }\r\n      .trigger-btn {\r\n        display: inline-block;\r\n        margin: 100px auto;\r\n      }\r\n\r\n      .fail.modal-confirm {\r\n        color: #636363;\r\n        width: 400px;\r\n      }\r\n      .fail.modal-confirm .modal-content {\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        text-align: center;\r\n        font-size: 14px;\r\n      }\r\n      .fail.modal-confirm .modal-header {\r\n        border-bottom: none;\r\n        background-color: #ff9999;\r\n        position: relative;\r\n      }\r\n      .fail.modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 26px;\r\n        margin: 30px 0 -10px;\r\n      }\r\n      .fail.modal-confirm .close {\r\n        position: absolute;\r\n        top: -5px;\r\n        right: -2px;\r\n      }\r\n      .modal-confirm .modal-body {\r\n        color: black;\r\n      }\r\n      .modal-confirm .modal-footer {\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        padding: 10px 15px 25px;\r\n      }\r\n      .fail.modal-confirm .modal-footer a {\r\n        color: #999;\r\n      }\r\n      .fail.modal-confirm .icon-box {\r\n        width: 80px;\r\n        height: 80px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        text-align: center;\r\n        border: 3px solid #f15e5e;\r\n      }\r\n      .fail.modal-confirm .icon-box i {\r\n        color: #f15e5e;\r\n        font-size: 46px;\r\n        display: inline-block;\r\n        margin: 0px;\r\n      }\r\n      .fail.modal-confirm .btn,\r\n      .fail.modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #ff9999;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        min-width: 120px;\r\n        border: none;\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n        margin: 0 5px;\r\n      }\r\n      .fail.modal-confirm .btn-secondary {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-secondary:hover,\r\n      .fail.modal-confirm .btn-secondary:focus {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger:hover,\r\n      .fail.modal-confirm .btn-danger:focus {\r\n        background: #ff9999;\r\n      }\r\n      td,\r\n      th {\r\n        vertical-align: middle;\r\n      }\r\n      input {\r\n        width: 100%;\r\n        height: 55px;\r\n      }\r\n      .btnstyle {\r\n        margin-top: 8%;\r\n        vertical-align: middle;\r\n        padding: 7%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class TechnologySpecificComp {\r\n  showFailModal;\r\n  showModal;\r\n  technology;\r\n  tarea = '';\r\n  techarr = [];\r\n  uniquetech = [];\r\n  editUser = false;\r\n  tech;\r\n  skill;\r\n  value;\r\n  index = 0;\r\n  id = 0;\r\n  slist;\r\n  templist;\r\n  sname = [];\r\n  tid;\r\n  tname;\r\n  updateskill;\r\n  NEW = [];\r\n  UPDATE = [];\r\n  error;\r\n  agree = false;\r\n  skillid;\r\n\r\n  constructor(\r\n    private ds: DataService,\r\n    private http: HttpClient,\r\n    public router: Router\r\n  ) {\r\n    console.log(this.router.url);\r\n    let temparr = this.router.url.split('/');\r\n    console.log(temparr);\r\n    this.technology = temparr.slice(-1)[0];\r\n    console.log(this.technology);\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    console.log('tech name : ', this.technology);\r\n\r\n    this.ds.getTechData(this.technology).subscribe(\r\n      (res) => {\r\n        this.templist = res;\r\n        this.slist = res;\r\n        console.log('entered');\r\n        console.log(this.slist);\r\n\r\n        this.slist.body.forEach((element) => {\r\n          this.sname.push(element.TEMPSKILL);\r\n        });\r\n\r\n        console.log(this.sname);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  addSkillHandler(skill) {\r\n    console.log('added skill : ', skill);\r\n    console.log('tech area : ', this.technology);\r\n    let resobj = {\r\n      TEMPSKILL: skill,\r\n      TEMPTECHNAME: this.technology,\r\n    };\r\n    this.sname.push(skill);\r\n\r\n    this.NEW.push(resobj);\r\n    console.log(this.NEW);\r\n    document.getElementById('skillname').nodeValue = '';\r\n  }\r\n\r\n  editHandler(skill) {\r\n    let resObj;\r\n    this.slist.body.forEach((element) => {\r\n      if (element.TEMPSKILL === skill) {\r\n        this.updateskill = skill;\r\n        resObj = {\r\n          TEMPID: element.TEMPID,\r\n          TEMPSKILL: element.TEMPSKILL,\r\n        };\r\n        return false;\r\n      }\r\n    });\r\n    console.log(resObj);\r\n    this.UPDATE.push(resObj);\r\n    console.log(this.UPDATE);\r\n    this.index = this.sname.indexOf(skill);\r\n    // console.log(this.index);\r\n  }\r\n\r\n  updateHandler(skill) {\r\n    this.slist.body.forEach((element) => {\r\n      if (element.TEMPSKILL === this.updateskill) {\r\n        element.TEMPSKILL = skill;\r\n        return false;\r\n      }\r\n    });\r\n    this.sname[this.index] = skill;\r\n    console.log(this.sname);\r\n    console.log(this.slist);\r\n    this.UPDATE.forEach((element) => {\r\n      if (element.TEMPSKILL === this.updateskill) {\r\n        element.TEMPSKILL = skill;\r\n        return false;\r\n      }\r\n    });\r\n    document.getElementById('editskill').nodeValue = '';\r\n  }\r\n\r\n  deleteHandler(skills) {}\r\n\r\n  redirectFun() {\r\n    this.router.navigate(['alltemplate']);\r\n  }\r\n\r\n  submitHandler() {\r\n    let jsonObj = {\r\n      NEW: this.NEW,\r\n      UPDATE: this.UPDATE,\r\n      DELETE: [],\r\n    };\r\n    let obj = {\r\n      EVALUATION_TEMP: jsonObj,\r\n    };\r\n    console.log(jsonObj);\r\n\r\n    this.ds.postData(obj).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        this.slist = res;\r\n        this.error = false;\r\n        this.showModal = true;\r\n      },\r\n      (err) => {\r\n        this.error = true;\r\n        this.showFailModal = 'true';\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Component, Output } from '@angular/core';\r\nimport { TechnologySpecificComp } from './tech-specific.component';\r\nimport { NgForm } from '@angular/forms';\r\nimport { error } from 'selenium-webdriver';\r\nimport { DataService } from './data.service';\r\nimport { DismissAlertComponent } from './DismissAlert.component';\r\nimport { Router } from '@angular/router'; //import router\r\n\r\n@Component({\r\n  selector: 'app-alltemplate-comp',\r\n  template: `\r\n    <ng-template [ngIf]=\"show == false\">\r\n      <div>No Data to display</div>\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"show == true\">\r\n      <div class=\"container\">\r\n        <table\r\n          class=\"table table-light table-hover table-striped\"\r\n          [ngStyle]=\"{\r\n            width: '70%',\r\n            margin: '0% auto',\r\n            'text-align': 'center'\r\n          }\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Technology</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let tech of uniquetech\" [value]=\"tech\">\r\n              <a\r\n                (click)=\"[techPage(tech), (tarea = tech)]\"\r\n                href=\"\"\r\n                [routerLink]=\"['' + tech]\"\r\n                class=\"nav-link\"\r\n                >{{ tech }}</a\r\n              >\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <router-outlet></router-outlet>\r\n\r\n      <!-- ng-template [ngIf]=\"router.url.includes(tech)\">\r\n      <div class=\"container\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngIf=\"!editUser\">\r\n              <td colspan=\"3\">\r\n                <input\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"skill\"\r\n                  class=\"form-control\"\r\n                  id=\"skillname\"\r\n                  placeholder=\"Enter Skill\"\r\n                  #skillname\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"submit\"\r\n                  (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n                  class=\"btn btn-info mb-3\"\r\n                >\r\n                  Add Skill\r\n                </button>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"editUser\">\r\n              <td colspan=\"3\">\r\n                <input\r\n                  type=\"text\"\r\n                  [(ngModel)]=\"skill\"\r\n                  class=\"form-control\"\r\n                  id=\"username\"\r\n                  placeholder=\"Enter Skill \"\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"submit\"\r\n                  (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n                  class=\"btn btn-info mb-3\"\r\n                >\r\n                  Update Skill\r\n                </button>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr *ngFor=\"let skills of sname; index as idx\">\r\n              <th scope=\"row\">Skill {{ idx + 1 }}</th>\r\n              <td>{{ skills }}</td>\r\n              <td>\r\n                <button\r\n                  class=\"bi bi-pencil-square btn btn-outline-info\"\r\n                  (click)=\"[editHandler(skills), (editUser = !editUser)]\"\r\n                >\r\n                  Edit\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  class=\"bi bi bi-trash btn btn-outline-danger\"\r\n                  (click)=\"deleteHandler(skills)\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <!-- ng-template [ngIf]=\"!editUser\">\r\n          <h5>Add Skills</h5>\r\n          <div class=\"mb-3\">\r\n            <label for=\"skillname\" class=\"form-label\"></label>\r\n            <input\r\n              type=\"text\"\r\n              [(ngModel)]=\"skill\"\r\n              class=\"form-control\"\r\n              id=\"skillname\"\r\n              placeholder=\"Enter Skill\"\r\n              #skillname\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <button\r\n              type=\"submit\"\r\n              (click)=\"[addSkillHandler(skill), (skillname.value = '')]\"\r\n              class=\"btn btn-info mb-3\"\r\n            >\r\n              Add Skill\r\n            </button>\r\n          </div>\r\n        <!/ng-template -->\r\n\r\n      <!-- ng-template [ngIf]=\"editUser\">\r\n          <h5>Edit Skills</h5>\r\n          <div class=\"mb-3\">\r\n            <label for=\"username\" class=\"form-label\"></label>\r\n            <input\r\n              type=\"text\"\r\n              [(ngModel)]=\"skill\"\r\n              class=\"form-control\"\r\n              id=\"username\"\r\n              placeholder=\"Enter Skill \"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <button\r\n              type=\"submit\"\r\n              (click)=\"[updateHandler(skill), (editUser = !editUser)]\"\r\n              class=\"btn btn-info mb-3\"\r\n            >\r\n              Update Skill\r\n            </button>\r\n          </div>\r\n        <!/ng-template -->\r\n\r\n      <!-- div class=\"mb-3\">\r\n      \r\n        <button\r\n          type=\"submit\"\r\n          (click)=\"submitHandler()\"\r\n          class=\"btn btn-primary mb-3\"\r\n        >\r\n          Submit\r\n        </button>\r\n \r\n    <!/div -->\r\n\r\n      <!/ng-template -->\r\n    </ng-template>\r\n  `,\r\n  styles: [\r\n    `\r\n      tr td span {\r\n        color: crimson;\r\n      }\r\n      tr td input.ng-invalid.ng-touched {\r\n        border: 2px solid crimson;\r\n      }\r\n      tr td input.ng-valid.ng-touched {\r\n        border: 2px solid darkseagreen;\r\n      }\r\n      a:link.link-style {\r\n        color: black;\r\n      }\r\n      a:hover.link-style {\r\n        color: gray;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class AllTemplateComp {\r\n  tarea = '';\r\n  techarr = [];\r\n  uniquetech = [];\r\n  editUser = false;\r\n  tech;\r\n  skill;\r\n  value;\r\n  index = 0;\r\n  id = 0;\r\n  slist;\r\n  templist;\r\n  sname = [];\r\n  tid;\r\n  tname;\r\n  updateskill;\r\n  NEW = [];\r\n  UPDATE = [];\r\n  error;\r\n  agree = false;\r\n  skillid;\r\n  show;\r\n\r\n  constructor(\r\n    private ds: DataService,\r\n    private http: HttpClient,\r\n    public router: Router\r\n  ) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getData().subscribe(\r\n      (res) => {\r\n        if (res) {\r\n          this.templist = res;\r\n          this.slist = res;\r\n          console.log(this.slist);\r\n          console.log(this.slist.EVALUATION_TEMP);\r\n\r\n          this.slist.EVALUATION_TEMP.forEach((element) => {\r\n            this.techarr.push(element.TEMPTECHNAME);\r\n          });\r\n\r\n          this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n          console.log('unique arr : ', this.uniquetech);\r\n          console.log(this.tarea);\r\n          // this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          //   if (element.TEMPTECHNAME === this.tarea) {\r\n          //     this.sname.push(element.TEMPSKILL);\r\n          //   }\r\n          // });\r\n          console.log(this.sname);\r\n          this.show = true;\r\n        } else {\r\n          this.show = false;\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n  techPage(tech) {\r\n    this.agree = true;\r\n    console.log('tarea : ', tech);\r\n    this.tarea = tech;\r\n    console.log('var tarea : ', this.tarea);\r\n  }\r\n\r\n  // techPage(tech) {\r\n  //   this.agree = true;\r\n  //   this.tarea = tech;\r\n  //   console.log(tech);\r\n  //   this.http\r\n  //     .get(\r\n  //       'https://opportunity-tracking-dev.mybluemix.net/api/template/' + tech\r\n  //     )\r\n  //     .subscribe(\r\n  //       (res) => {\r\n  //         this.templist = res;\r\n  //         this.slist = res;\r\n  //         console.log('entered');\r\n  //         console.log(this.slist);\r\n\r\n  //         this.slist.body.forEach((element) => {\r\n  //           this.sname.push(element.TEMPSKILL);\r\n  //         });\r\n\r\n  //         console.log(this.sname);\r\n  //       },\r\n  //       (err) => {\r\n  //         console.log('Error : ', err);\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // // dropdownHandler(tech) {\r\n  // //   console.log('entered');\r\n  // //   console.log(tech);\r\n  // //   this.tarea = tech;\r\n  // //   this.sname = [];\r\n  // //   this.callDataServer();\r\n  // // }\r\n\r\n  // addSkillHandler(skill) {\r\n  //   console.log('tech area : ', this.tarea);\r\n  //   let resobj = {\r\n  //     TEMPSKILL: skill,\r\n  //     TEMPTECHNAME: this.tarea,\r\n  //   };\r\n  //   this.sname.push(skill);\r\n  //   console.log(skill);\r\n  //   this.NEW.push(resobj);\r\n  //   console.log(this.NEW);\r\n  // }\r\n\r\n  // editHandler(skill) {\r\n  //   let resObj;\r\n  //   this.slist.body.forEach((element) => {\r\n  //     if (element.TEMPSKILL === skill) {\r\n  //       this.updateskill = skill;\r\n  //       resObj = {\r\n  //         TEMPID: element.TEMPID,\r\n  //         TEMPSKILL: element.TEMPSKILL,\r\n  //       };\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  //   console.log(resObj);\r\n  //   this.UPDATE.push(resObj);\r\n  //   console.log(this.UPDATE);\r\n  //   this.index = this.sname.indexOf(skill);\r\n  //   // console.log(this.index);\r\n  // }\r\n\r\n  // updateHandler(skill) {\r\n  //   this.slist.body.forEach((element) => {\r\n  //     if (element.TEMPSKILL === this.updateskill) {\r\n  //       element.TEMPSKILL = skill;\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  //   this.sname[this.index] = skill;\r\n  //   console.log(this.sname);\r\n  //   console.log(this.slist);\r\n  //   this.UPDATE.forEach((element) => {\r\n  //     if (element.TEMPSKILL === this.updateskill) {\r\n  //       element.TEMPSKILL = skill;\r\n  //       return false;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // deleteHandler(skills) {}\r\n\r\n  // submitHandler() {\r\n  //   let jsonObj = {\r\n  //     NEW: this.NEW,\r\n  //     UPDATE: this.UPDATE,\r\n  //     DELETE: [],\r\n  //   };\r\n  //   let obj = {\r\n  //     EVALUATION_TEMP: jsonObj,\r\n  //   };\r\n  //   console.log(jsonObj);\r\n\r\n  //   this.ds.postData(obj).subscribe(\r\n  //     (res) => {\r\n  //       console.log(res);\r\n  //       this.slist = res;\r\n  //       this.error = false;\r\n  //     },\r\n  //     (err) => {\r\n  //       this.error = true;\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  //***************************************************************** */\r\n\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       this.tarea = this.slist.techarea;\r\n  //       console.log(this.tarea);\r\n  //       this.slist.skills.forEach((element) => {\r\n  //         let index = element;\r\n  //         this.sname.push(index.name);\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n  // addSkillHandler(skill) {\r\n  //   let resobj = {\r\n  //     skills: skill,\r\n  //   };\r\n  //   this.sname.push(skill);\r\n  //   this.ds.postData(resobj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n\r\n  //   // if (this.slist.find((sk) => this.slist === skill)) {\r\n  //   //   console.log('user already exists');\r\n  //   // } else {\r\n  //   //   console.log(skill);\r\n  //   //   this.slist.push(skill);\r\n  //   // }\r\n  // }\r\n\r\n  // deleteHandler(skills) {\r\n  //   console.log(skills);\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.deleteData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.slist = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // editHandler(skills) {\r\n  //   this.slist.skills.forEach((element) => {\r\n  //     let index = element;\r\n  //     console.log('entered');\r\n  //     if (index.name === skills) {\r\n  //       console.log('right');\r\n  //       console.log(index.id);\r\n  //       this.tid = index.id;\r\n  //       this.tname = index.name;\r\n  //     }\r\n  //   });\r\n  //   let resObj = {\r\n  //     id: this.tid,\r\n  //     skills: this.tname,\r\n  //   };\r\n  //   this.ds.selectToUpdate(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  // }\r\n  // updateUser(skill) {\r\n  //   console.log(skill);\r\n  //   let resObj = {\r\n  //     id: this.updateskill.id,\r\n  //     skills: skill,\r\n  //   };\r\n  //   console.log(resObj);\r\n  //   this.ds.updateData(resObj).subscribe((res) => {\r\n  //     console.log(res);\r\n  //     this.updateskill = res;\r\n  //   });\r\n  //   window.location.reload(true);\r\n  // }\r\n  // submitHandler() {}\r\n}\r\n","// import { Component } from '@angular/core';\r\n// import { NgForm } from '@angular/forms';\r\n// import { DataService } from './data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { DismissAlertComponent } from './DismissAlert.component';\r\nimport { DataService } from './data.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { $ } from 'protractor';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-create',\r\n  template: `\r\n    <div\r\n      id=\"myModal\"\r\n      class=\"modal fail fade\"\r\n      [ngClass]=\"{ show: showFailModal }\"\r\n    >\r\n      <div class=\"modal-dialog modal-confirm fail\">\r\n        <div class=\"modal-content fail\">\r\n          <div class=\"modal-header flex-column fail\">\r\n            <div class=\"icon-box fail\">\r\n              <i class=\"material-icons fail\">&#xE5CD;</i>\r\n            </div>\r\n            <h4 class=\"fail modal-title w-100\">Error Alert</h4>\r\n            <button\r\n              (click)=\"[(showFailModal = false)]\"\r\n              type=\"button\"\r\n              class=\"close fail\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body fail\">\r\n            <p>Please check the error. Something went wrong!</p>\r\n          </div>\r\n          <div class=\"fail modal-footer justify-content-center\">\r\n            <button\r\n              (click)=\"showFailModal = false\"\r\n              type=\"button\"\r\n              class=\"btn btn-secondary fail\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"myModal\" class=\"modal fade\" [ngClass]=\"{ show: showModal }\">\r\n      <div class=\"modal-dialog modal-confirm\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header justify-content-center\">\r\n            <div class=\"icon-box\">\r\n              <i class=\"material-icons\">&#xE876;</i>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              (click)=\"[(showModal = false), redirectFun()]\"\r\n              data-dismiss=\"modal\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <h4>Great!</h4>\r\n            <p>Your evaluation has been added successfully.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <form ngNativeValidate>\r\n        <table class=\"table\" [ngStyle]=\"{ width: '70%', margin: '0% auto' }\">\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\" colspan=\"2\">\r\n                <label for=\"\"> Applicant's Name :</label>\r\n\r\n                <input\r\n                  [ngStyle]=\"{ height: '55px' }\"\r\n                  colspan=\"3\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\" Enter Applicant's Name\"\r\n                  [(ngModel)]=\"evalObj.APPLICANTNAME\"\r\n                  name=\"applicant\"\r\n                  required\r\n                />\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" colspan=\"2\">\r\n                <label for=\"\"> Evaluators's Name :</label>\r\n\r\n                <input\r\n                  [ngStyle]=\"{ height: '55px' }\"\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\" Enter Evaluator's Name\"\r\n                  [(ngModel)]=\"evalObj.EVALUATORNAME\"\r\n                  name=\"evaluator\"\r\n                  required\r\n                />\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" colspan=\"2\">\r\n                <label for=\"\"> Technology :</label>\r\n\r\n                <select\r\n                  [ngStyle]=\"{ height: '55px' }\"\r\n                  class=\"form-control\"\r\n                  #techarea\r\n                  (change)=\"dropdownHandler(techarea.value)\"\r\n                  required\r\n                >\r\n                  <option *ngFor=\"let tech of uniquetech\" [value]=\"tech\">\r\n                    {{ tech }}\r\n                  </option>\r\n                </select>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td scope=\"col\" colspan=\"2\" [ngStyle]=\"{ height: '55px' }\">\r\n                <label for=\"\">\r\n                  <b>Date :</b> {{ today | date: 'dd/MMM/yyyy' }}</label\r\n                >\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                <label for=\"\">Skills : </label>\r\n              </th>\r\n              <th scope=\"col\">\r\n                <label for=\"\">Scores : </label>\r\n              </th>\r\n            </tr>\r\n            <tr *ngFor=\"let skill of templist\">\r\n              <th scope=\"col\">\r\n                <label for=\"\">{{ skill.TEMPSKILL }}</label>\r\n              </th>\r\n              <th scope=\"col\">\r\n                <!--input\r\n                  id=\"range\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"10\"\r\n                  step=\"1\"\r\n                  [(ngModel)]=\"skill.EVALSCORE\"\r\n                  name=\"score\"\r\n                  (input)=\"pushScore(skill.EVALSCORE)\"\r\n                  required\r\n                /-->\r\n                <div class=\"range-wrap\">\r\n                  <input\r\n                    id=\"range\"\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"10\"\r\n                    step=\"1\"\r\n                    name=\"score\"\r\n                    [(ngModel)]=\"skill.EVALSCORE\"\r\n                    (input)=\"pushScore(skill.EVALSCORE)\"\r\n                    class=\"range\"\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <output class=\"bubble\"></output>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"mb-3\">\r\n          <button\r\n            [ngStyle]=\"{ 'margin-top': '2%' }\"\r\n            type=\"submit\"\r\n            id=\"submitbtn\"\r\n            (click)=\"[submitHandler()]\"\r\n            class=\"btn btn-primary mb-3\"\r\n            data-toggle=\"modal\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .range-wrap {\r\n        position: relative;\r\n        margin: 0 auto 3rem;\r\n      }\r\n      .range {\r\n        width: 100%;\r\n      }\r\n      .bubble {\r\n        background: #4d79ff;\r\n        color: white;\r\n        padding: 4px 12px;\r\n        position: absolute;\r\n        border-radius: 4px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n      }\r\n      .bubble::after {\r\n        content: '';\r\n        position: absolute;\r\n        width: 2px;\r\n        height: 2px;\r\n        background: red;\r\n        top: -1px;\r\n        left: 50%;\r\n      }\r\n\r\n      .modal.show {\r\n        display: block;\r\n      }\r\n      .modal-confirm {\r\n        color: #434e65;\r\n        width: 525px;\r\n        border: 1px solid gray;\r\n        border-radius: 5px;\r\n      }\r\n      .modal-confirm .modal-content {\r\n        padding: 20px;\r\n        font-size: 16px;\r\n        border-radius: 5px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .modal-header {\r\n        background: #8faed6;\r\n        border-bottom: none;\r\n        position: relative;\r\n        text-align: center;\r\n        margin: -20px -20px 0;\r\n        border-radius: 5px 5px 0 0;\r\n        padding: 35px;\r\n      }\r\n      .modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 36px;\r\n        margin: 10px 0;\r\n      }\r\n      .modal-confirm .form-control,\r\n      .modal-confirm .btn {\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n      }\r\n      .modal-confirm .close {\r\n        position: absolute;\r\n        top: 15px;\r\n        right: 15px;\r\n        color: #fff;\r\n        text-shadow: none;\r\n        opacity: 0.5;\r\n      }\r\n      .modal-confirm .close:hover {\r\n        opacity: 0.8;\r\n      }\r\n      .modal-confirm .icon-box {\r\n        color: #fff;\r\n        width: 95px;\r\n        height: 95px;\r\n        display: inline-block;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        border: 5px solid #fff;\r\n        padding: 15px;\r\n        text-align: center;\r\n      }\r\n      .modal-confirm .icon-box i {\r\n        font-size: 64px;\r\n        margin: -4px 0 0 -4px;\r\n      }\r\n      .modal-confirm.modal-dialog {\r\n        margin-top: 80px;\r\n      }\r\n      .modal-confirm .btn,\r\n      .modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #eeb711 !important;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        border-radius: 30px;\r\n        margin-top: 10px;\r\n        padding: 6px 20px;\r\n        border: none;\r\n      }\r\n      .modal-confirm .btn:hover,\r\n      .modal-confirm .btn:focus {\r\n        background: #eda645 !important;\r\n        outline: none;\r\n      }\r\n      .modal-confirm .btn span {\r\n        margin: 1px 3px 0;\r\n        float: left;\r\n      }\r\n      .modal-confirm .btn i {\r\n        margin-left: 1px;\r\n        font-size: 20px;\r\n        float: right;\r\n      }\r\n      .trigger-btn {\r\n        display: inline-block;\r\n        margin: 100px auto;\r\n      }\r\n\r\n      .fail.modal-confirm {\r\n        color: #636363;\r\n        width: 400px;\r\n      }\r\n      .fail.modal-confirm .modal-content {\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        border: none;\r\n        text-align: center;\r\n        font-size: 14px;\r\n      }\r\n      .fail.modal-confirm .modal-header {\r\n        border-bottom: none;\r\n        background-color: #ff9999;\r\n        position: relative;\r\n      }\r\n      .fail.modal-confirm h4 {\r\n        text-align: center;\r\n        font-size: 26px;\r\n        margin: 30px 0 -10px;\r\n      }\r\n      .fail.modal-confirm .close {\r\n        position: absolute;\r\n        top: -5px;\r\n        right: -2px;\r\n      }\r\n      .modal-confirm .modal-body {\r\n        color: black;\r\n      }\r\n      .modal-confirm .modal-footer {\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        padding: 10px 15px 25px;\r\n      }\r\n      .fail.modal-confirm .modal-footer a {\r\n        color: #999;\r\n      }\r\n      .fail.modal-confirm .icon-box {\r\n        width: 80px;\r\n        height: 80px;\r\n        margin: 0 auto;\r\n        border-radius: 50%;\r\n        z-index: 9;\r\n        text-align: center;\r\n        border: 3px solid #f15e5e;\r\n      }\r\n      .fail.modal-confirm .icon-box i {\r\n        color: #f15e5e;\r\n        font-size: 46px;\r\n        display: inline-block;\r\n        margin: 0px;\r\n      }\r\n      .fail.modal-confirm .btn,\r\n      .fail.modal-confirm .btn:active {\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        background: #ff9999;\r\n        text-decoration: none;\r\n        transition: all 0.4s;\r\n        line-height: normal;\r\n        min-width: 120px;\r\n        border: none;\r\n        min-height: 40px;\r\n        border-radius: 3px;\r\n        margin: 0 5px;\r\n      }\r\n      .fail.modal-confirm .btn-secondary {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-secondary:hover,\r\n      .fail.modal-confirm .btn-secondary:focus {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger {\r\n        background: #ff9999;\r\n      }\r\n      .fail.modal-confirm .btn-danger:hover,\r\n      .fail.modal-confirm .btn-danger:focus {\r\n        background: #ff9999;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class CreateEvaluationComp {\r\n  today: number = Date.now();\r\n  showFailModal;\r\n  showModal;\r\n  success;\r\n  evalObj = {\r\n    APPLICANTNAME: '',\r\n    EVALUATORNAME: '',\r\n  };\r\n  score;\r\n  evalarr = [];\r\n  tarea = '';\r\n  techarr = [];\r\n  uniquetech = [];\r\n  editUser = false;\r\n  tech;\r\n  skill;\r\n  value;\r\n  index = 0;\r\n  skillid = [];\r\n  slist;\r\n  templist = [];\r\n  sname = [];\r\n  scores = [];\r\n  tid;\r\n  tname;\r\n  updateskill;\r\n  NEW = [];\r\n  UPDATE = [];\r\n  EVALUATION = [];\r\n\r\n  constructor(\r\n    private ds: DataService,\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) {\r\n    this.callDataServer();\r\n  }\r\n  callDataServer() {\r\n    this.ds.getData().subscribe(\r\n      (res) => {\r\n        this.slist = res;\r\n        console.log(this.slist);\r\n        console.log(this.slist.EVALUATION_TEMP);\r\n\r\n        this.slist.EVALUATION_TEMP.forEach((element) => {\r\n          this.techarr.push(element.TEMPTECHNAME);\r\n        });\r\n\r\n        this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n        console.log('unique arr : ', this.uniquetech);\r\n        console.log(this.tarea);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n  redirectFun() {\r\n    this.router.navigate(['allevaluation']);\r\n  }\r\n\r\n  dropdownHandler(tech) {\r\n    console.log('entered');\r\n    console.log(tech);\r\n    this.tarea = tech;\r\n    this.sname = [];\r\n    this.http;\r\n    this.ds.getTechData(tech).subscribe(\r\n      (res) => {\r\n        this.slist = res;\r\n        console.log('temp list : ', this.slist);\r\n        this.templist = this.slist.body;\r\n        console.log('temp list body : ', this.templist);\r\n      },\r\n      (err) => {\r\n        console.log('Error : ', err);\r\n      }\r\n    );\r\n  }\r\n\r\n  pushScore(score) {\r\n    console.log('score : ', score);\r\n    console.log(this.templist);\r\n\r\n    const allRanges = document.querySelectorAll('.range-wrap');\r\n    allRanges.forEach((wrap) => {\r\n      const range = wrap.querySelector('.range');\r\n      const bubble = wrap.querySelector('.bubble');\r\n\r\n      range.addEventListener('input', () => {\r\n        setBubble(range, bubble);\r\n      });\r\n      setBubble(range, bubble);\r\n    });\r\n\r\n    function setBubble(range, bubble) {\r\n      const val = range.value;\r\n      const min = range.min ? range.min : 0;\r\n      const max = range.max ? range.max : 100;\r\n      const newVal = Number(((val - min) * 100) / (max - min));\r\n      bubble.innerHTML = val;\r\n\r\n      // Sorta magic numbers based on size of the native UI thumb\r\n      bubble.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n    }\r\n  }\r\n\r\n  submitHandler() {\r\n    if (\r\n      this.evalObj.APPLICANTNAME &&\r\n      this.evalObj.EVALUATORNAME &&\r\n      this.tarea\r\n    ) {\r\n      console.log(this.evalObj);\r\n      let resObj;\r\n\r\n      let i = 0;\r\n      this.templist.forEach((element) => {\r\n        resObj = {\r\n          EVALNAME: this.tarea,\r\n          APPLICANTNAME: this.evalObj.APPLICANTNAME,\r\n          EVALUATORNAME: this.evalObj.EVALUATORNAME,\r\n          EVALSKILL: element.TEMPSKILL,\r\n          EVALSCORE: element.EVALSCORE || 0,\r\n        };\r\n        this.EVALUATION.push(resObj);\r\n        i++;\r\n      });\r\n      let jsonObj = {\r\n        EVALUATION: this.EVALUATION,\r\n      };\r\n      console.log(jsonObj);\r\n\r\n      this.ds.postEvalData(jsonObj).subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n          this.success = true;\r\n          console.log(this.success);\r\n\r\n          this.showModal = true;\r\n\r\n          //   this.slist = res;\r\n        },\r\n        (err) => {\r\n          this.success = false;\r\n          this.showFailModal = 'true';\r\n        }\r\n      );\r\n    } else {\r\n    }\r\n\r\n    // let jsonObj = {\r\n    //   NEW: this.NEW,\r\n    //   UPDATE: this.UPDATE,\r\n    //   DELETE: [],\r\n    // };\r\n    // let obj = {\r\n    //   EVALUATION_TEMP: jsonObj,\r\n    // };\r\n    // console.log(jsonObj);\r\n    // this.ds.postData(obj).subscribe((res) => {\r\n    //   console.log(res);\r\n    //   this.slist = res;\r\n    // });\r\n  }\r\n\r\n  //   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  //   tarea = '';\r\n  //   techarr = [];\r\n  //   uniquetech = [];\r\n  //   editUser = false;\r\n  //   tech;\r\n  //   skill;\r\n  //   value;\r\n  //   index = 0;\r\n  //   id = 0;\r\n  //   slist;\r\n  //   templist;\r\n  //   sname = [];\r\n  //   tid;\r\n  //   tname;\r\n  //   updateskill;\r\n  //   NEW = [];\r\n  //   UPDATE = [];\r\n\r\n  //   constructor(private ds: DataService) {\r\n  //     this.callDataServer();\r\n  //   }\r\n  //   callDataServer() {\r\n  //     this.ds.getData().subscribe(\r\n  //       (res) => {\r\n  //         this.templist = res;\r\n  //         this.slist = res;\r\n  //         console.log(this.slist);\r\n  //         console.log(this.slist.EVALUATION_TEMP);\r\n\r\n  //         this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //           this.techarr.push(element.TEMPTECHNAME);\r\n  //         });\r\n\r\n  //         this.uniquetech = this.techarr.filter((x, i, a) => a.indexOf(x) == i);\r\n  //         console.log('unique arr : ', this.uniquetech);\r\n  //         console.log(this.tarea);\r\n  //         this.slist.EVALUATION_TEMP.forEach((element) => {\r\n  //           if (element.TEMPTECHNAME === this.tarea) {\r\n  //             this.sname.push(element.TEMPSKILL);\r\n  //           }\r\n  //         });\r\n  //         console.log(this.sname);\r\n  //       },\r\n  //       (err) => {\r\n  //         console.log('Error : ', err);\r\n  //       }\r\n  //     );\r\n  //   }\r\n\r\n  //   dropdownHandler(tech) {\r\n  //     console.log('entered');\r\n  //     console.log(tech);\r\n  //     this.tarea = tech;\r\n  //     this.sname = [];\r\n  //     this.callDataServer();\r\n  //   }\r\n\r\n  // ====================================================================================\r\n\r\n  // tarea = '';\r\n  // editUser = false;\r\n  // skill;\r\n  // value;\r\n  // index;\r\n  // id = 0;\r\n  // slist;\r\n  // sname = [];\r\n  // tid;\r\n  // tname;\r\n  // updateskill;\r\n  // today: number = Date.now();\r\n\r\n  // constructor(private ds: DataService) {\r\n  //   this.callDataServer();\r\n  // }\r\n  // callDataServer() {\r\n  //   this.ds.getData().subscribe(\r\n  //     (res) => {\r\n  //       this.slist = res;\r\n  //       console.log(this.slist);\r\n  //       this.tarea = this.slist.techarea;\r\n  //       console.log(this.tarea);\r\n  //       this.slist.skills.forEach((element) => {\r\n  //         let index = element;\r\n  //         this.sname.push(index.name);\r\n  //       });\r\n  //       console.log(this.sname);\r\n  //     },\r\n  //     (err) => {\r\n  //       console.log('Error : ', err);\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllEvaluationComp } from './allevaluation.component';\r\nimport { AllTemplateComp } from './alltemplate.component';\r\nimport { CreateEvaluationComp } from './create-evaluation.component';\r\nimport { CreateTemplateComp } from './create-template.component';\r\nimport { EvaluationComp } from './evaluation.component';\r\nimport { EvaluationDetailComp } from './evaluationDetail.component';\r\nimport { TechnologySpecificComp } from './tech-specific.component';\r\nimport { TemplateForm } from './template-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'template',\r\n    component: TemplateForm,\r\n  },\r\n  {\r\n    path: 'evaluation',\r\n    component: EvaluationComp,\r\n  },\r\n  {\r\n    path: 'allevaluation',\r\n    component: AllEvaluationComp,\r\n  },\r\n  { path: 'createevaluation', component: CreateEvaluationComp },\r\n  {\r\n    path: 'alltemplate',\r\n    component: AllTemplateComp,\r\n    children: [],\r\n  },\r\n  { path: 'alltemplate/:type', component: TechnologySpecificComp },\r\n  { path: 'createtemplate', component: CreateTemplateComp },\r\n  { path: 'evaluationDetails', component: EvaluationDetailComp },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}